#!/usr/bin/env python3

import sys
import argparse

if '--local' in sys.argv:
    print('local mode')
    import setupLibPaths

import rogue    
import pyrogue.gui
#import pyrogue.pydm
import lcls2_timetool
    

# New Arg parsers    
parser = argparse.ArgumentParser()

# Add arguments
parser.add_argument(
    "--dev",
    dest     = 'dev',
    type     = str,
    required = False,
    default  = '/dev/datadev_0',
    help     = "path to device",
)  

parser.add_argument(
    "--pgp3", 
    required = False,
    action = 'store_true',    
    help     = "true = PGPv3, false = PGP2b",
) 

parser.add_argument(
    "--pollEn", 
    required = False,
    action = 'store_true',
    help     = "Enable auto-polling",
) 

parser.add_argument(
    "--initRead", 
    required = False,
    action = 'store_true',
    help     = "Enable read all variables at start",
)  

parser.add_argument(
    "--dataCapture", 
    required = False,
    action = 'store_true',
    help     = "Enable TimeToolRx module",
)

parser.add_argument(
    "--dataDebug", 
    required = False,
    action = 'store_true',
    help     = "Enable TimeToolRx module",
)


parser.add_argument(
    "--serverPort",
    type = int,
    default = 0)
  

# Get the arguments
args = parser.parse_known_args()
    


#rogue.Logging.setFilter('pyrogue.batcher', rogue.Logging.Debug)

#################################################################

# Set the argument parser

#################################################################

with lcls2_timetool.TimeToolKcu1500Root(**vars(args[0])) as root:

#    pyrogue.pydm.runPyDM(root=root)

    # Create GUI
    appTop = pyrogue.gui.application(sys.argv)
    guiTop = pyrogue.gui.GuiTop()
    guiTop.addTree(root)
    guiTop.resize(1000, 1000)

    # Run gui
    appTop.exec_()
